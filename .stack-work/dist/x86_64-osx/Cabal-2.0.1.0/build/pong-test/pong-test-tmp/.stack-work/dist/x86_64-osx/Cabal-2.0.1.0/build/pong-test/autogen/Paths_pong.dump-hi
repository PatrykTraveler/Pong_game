
==================== FINAL INTERFACE ====================
2018-01-25 20:00:41.900524 UTC

interface main:Paths_pong 8022
  interface hash: ef4e2cca70cea222030277d1fe809b35
  ABI hash: 79ce9946412f142a109fd086e0c0f640
  export-list hash: 97760f29b4ec8846a35a074da802077e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 58d4ed0d85b1016f5b17b4c1110c9c18
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths_pong.getBinDir
  Paths_pong.getDataDir
  Paths_pong.getDataFileName
  Paths_pong.getDynLibDir
  Paths_pong.getLibDir
  Paths_pong.getLibexecDir
  Paths_pong.getSysconfDir
  Paths_pong.version
module dependencies:
package dependencies: base-4.10.1.0* ghc-prim-0.5.1.1
                      integer-gmp-1.0.1.0
orphans: base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Type.Equality base-4.10.1.0:Data.Version
                         base-4.10.1.0:GHC.Generics base-4.10.1.0:GHC.IO.Exception
                         base-4.10.1.0:GHC.TypeLits base-4.10.1.0:GHC.TypeNats
import  -/  base-4.10.1.0:Control.Exception c134ea327d158f2eebf26e12a1d4ad47
import  -/  base-4.10.1.0:Data.Version 6f3983622b9a4afb46259626123f5908
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.IO e261d8b68ccf81a359626fa520b57d1d
import  -/  base-4.10.1.0:GHC.IO.Exception c72758923693d771268bed5d3d52443d
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.Environment c9f912affeed5beb387a8c5d2b2c6102
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
addDependentFile "/Users/filipdej/.stack/programs/x86_64-osx/ghc-8.2.2/lib/ghc-8.2.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-osx/Cabal-2.0.1.0/build/pong-test/autogen/cabal_macros.h"
8608738074806513be779399070834b1
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Paths_pong.$trModule3
                   Paths_pong.$trModule1) -}
7f4b7e3b22b9c87f2fc9fc5d276c9f3b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Paths_pong.$trModule2) -}
c52d6842c96a35143a2c6f33fc7beb1e
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Paths_pong"#) -}
88688d34a09b51def242bc14785774fe
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Paths_pong.$trModule4) -}
152b27cd54a0b7781437b773482600a8
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
bb9b2e452e2241793da807c5093b1348
  getBinDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_pong.getBinDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
db4c0e8f24fac37680c340af5fd8ae6e
  getBinDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_pong.getBinDir5
                   Paths_pong.getBinDir2
                   eta) -}
5838d5d0d39b18f5e75c8c217350ed3d
  getBinDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.eqTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Base.Nothing
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Base.Just ds1
                   -> case ds1 of wild2 { Data.Type.Equality.HRefl cobox cobox1 ->
                      (# eta, Paths_pong.getBinDir3 #) } } }) -}
15f7c549434b2536fa6aa1c6abe13850
  getBinDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Paths_pong.getBinDir4) -}
3439ce90619991dc50960638b6d96596
  getBinDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/filipdej/Desktop/pong/.stack-work/install/x86_64-osx/lts-10.3/8.2.2/bin"#) -}
2419c5b3b35950646869eabb446cde44
  getBinDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_pong.getBinDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_pong.getBinDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
cac4695e9ea443df650aea512a8be33f
  getBinDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Paths_pong.getBinDir7) -}
4205155e93cc8b0259d8b60fe6baf2da
  getBinDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pong_bindir"#) -}
cb894a6e4905f8c0729b9c00b13e4a4f
  getDataDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_pong.getDataDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
79eaac14ebb10e109e0ac44386f6da16
  getDataDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_pong.getDataDir5
                   Paths_pong.getDataDir2
                   eta) -}
d016144bb95fafec48f24ee90349da24
  getDataDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.eqTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Base.Nothing
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Base.Just ds1
                   -> case ds1 of wild2 { Data.Type.Equality.HRefl cobox cobox1 ->
                      (# eta, Paths_pong.getDataDir3 #) } } }) -}
569df5256e5d6399383f4f051f1b605d
  getDataDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_pong.getDataDir4) -}
bc4f2c1c371a39f861d53c8c19fd1b2a
  getDataDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/filipdej/Desktop/pong/.stack-work/install/x86_64-osx/lts-10.3/8.2.2/share/x86_64-osx-ghc-8.2.2/pong-0.1.0.0"#) -}
1b5b750574bdca5119b19cd8b6756378
  getDataDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_pong.getDataDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_pong.getDataDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
7f2f3892b3b673070a9805f3b83df3da
  getDataDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_pong.getDataDir7) -}
5f69c706f7008fabbfd899788754290f
  getDataDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pong_datadir"#) -}
d23b7be8edb8a8eea587745187def21e
  getDataFileName :: GHC.IO.FilePath -> GHC.Types.IO GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_pong.getDataFileName1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R)) -}
d2409f6e3210a0548da25a09e9b41472
  getDataFileName1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (name :: GHC.IO.FilePath)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.SomeException
                        Paths_pong.getDataDir5
                        Paths_pong.getDataDir2
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.++
                      @ GHC.Types.Char
                      ipv1
                      (GHC.CString.unpackAppendCString#
                         Paths_pong.getDataFileName2
                         name) #) }) -}
ec664c2a881acaf9e13117c88266fddf
  getDataFileName2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/"#) -}
e1835e174a4d9e542d484da47b8e1875
  getDynLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_pong.getDynLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
88d5f25197cc7bec5428a4c25d21b9a1
  getDynLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_pong.getDynLibDir5
                   Paths_pong.getDynLibDir2
                   eta) -}
cecd0d6f1c6d8f3f3d03ff70b0456966
  getDynLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.eqTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Base.Nothing
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Base.Just ds1
                   -> case ds1 of wild2 { Data.Type.Equality.HRefl cobox cobox1 ->
                      (# eta, Paths_pong.getDynLibDir3 #) } } }) -}
d4bc84eb5284e429e6f72587e5a29b4b
  getDynLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_pong.getDynLibDir4) -}
f4d97f935446a1aec7f8e1789c03c5a0
  getDynLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/filipdej/Desktop/pong/.stack-work/install/x86_64-osx/lts-10.3/8.2.2/lib/x86_64-osx-ghc-8.2.2"#) -}
9106eb472beb8efc7b07a487068761de
  getDynLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_pong.getDynLibDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_pong.getDynLibDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
5fe7ea6416cfcedbe685742854e2c2a2
  getDynLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_pong.getDynLibDir7) -}
f8ccbfab33b378bcd532fa32f068c963
  getDynLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pong_dynlibdir"#) -}
d3935a28ca3f6789ef6864d07e57a2e6
  getLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_pong.getLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
b491d24960ab48c2e0774a0082fcfa85
  getLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_pong.getLibDir5
                   Paths_pong.getLibDir2
                   eta) -}
99d1a67cda1d237ba2142b00b868e567
  getLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.eqTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Base.Nothing
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Base.Just ds1
                   -> case ds1 of wild2 { Data.Type.Equality.HRefl cobox cobox1 ->
                      (# eta, Paths_pong.getLibDir3 #) } } }) -}
7924b6ac87eb4a56513d1b1fc5e296dc
  getLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Paths_pong.getLibDir4) -}
a2c63b159b985994c2381accd14dfcba
  getLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/filipdej/Desktop/pong/.stack-work/install/x86_64-osx/lts-10.3/8.2.2/lib/x86_64-osx-ghc-8.2.2/pong-0.1.0.0-Imn9M3jMaJ65zP1yKaWK6B-pong-test"#) -}
d6180fa76276843e4a8d72c614fdf742
  getLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_pong.getLibDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_pong.getLibDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
c913d1477fd4900c8138e2d4af1d80b2
  getLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Paths_pong.getLibDir7) -}
ee4734d1463fa701957d7e62c15dd973
  getLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pong_libdir"#) -}
d0cfb7b036a1f6bb7d84957c05ae0214
  getLibexecDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_pong.getLibexecDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
20f248cc2378d9c49405c922884c67a8
  getLibexecDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_pong.getLibexecDir5
                   Paths_pong.getLibexecDir2
                   eta) -}
3ddaca76954854246ffbac027ea8b441
  getLibexecDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.eqTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Base.Nothing
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Base.Just ds1
                   -> case ds1 of wild2 { Data.Type.Equality.HRefl cobox cobox1 ->
                      (# eta, Paths_pong.getLibexecDir3 #) } } }) -}
d514599d26586ac9e95a745cfab384cb
  getLibexecDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_pong.getLibexecDir4) -}
c4db0deb577958ef1f0b43c260073d4d
  getLibexecDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/filipdej/Desktop/pong/.stack-work/install/x86_64-osx/lts-10.3/8.2.2/libexec/x86_64-osx-ghc-8.2.2/pong-0.1.0.0"#) -}
4c364a27a6d4f2780a183f08f1d4661d
  getLibexecDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_pong.getLibexecDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_pong.getLibexecDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
e611925f50d95af04a2a99d141e07735
  getLibexecDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_pong.getLibexecDir7) -}
6a6140eb3d951d4f398f99d7aa2b4803
  getLibexecDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pong_libexecdir"#) -}
ccdceffbc698a2241c50bdd620224bb3
  getSysconfDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_pong.getSysconfDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
19bab9a742431fe19cf996d1f33f565e
  getSysconfDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_pong.getSysconfDir5
                   Paths_pong.getSysconfDir2
                   eta) -}
a7c5d31d3b72e5dbe40b502ef8ceca15
  getSysconfDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.eqTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Base.Nothing
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Base.Just ds1
                   -> case ds1 of wild2 { Data.Type.Equality.HRefl cobox cobox1 ->
                      (# eta, Paths_pong.getSysconfDir3 #) } } }) -}
5a2f22c0c5af49982d3b0de4248fd74c
  getSysconfDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_pong.getSysconfDir4) -}
5034e5f0c09cb19e86872c3246e4e058
  getSysconfDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/Users/filipdej/Desktop/pong/.stack-work/install/x86_64-osx/lts-10.3/8.2.2/etc"#) -}
697755035447a04e1c3453f74ad0291f
  getSysconfDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_pong.getSysconfDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_pong.getSysconfDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
c7b0dda0f457f093858b29627cb27213
  getSysconfDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_pong.getSysconfDir7) -}
0a5e5ed7b14baac32be13e82cf833234
  getSysconfDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pong_sysconfdir"#) -}
e4eb67115bab3e83aa4467faad72bb97
  version :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Paths_pong.version1
                   (GHC.Types.[] @ GHC.Base.String)) -}
0a980ff242c5f91fe86a52ec1b1fd3d5
  version1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_pong.version5
                   Paths_pong.version2) -}
80eb15424562f81fc056163cb7b521a8
  version2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_pong.version6
                   Paths_pong.version3) -}
a781d36dd1efac0d77adda6d51ccdb3c
  version3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_pong.version5
                   Paths_pong.version4) -}
aec2b1261330c3e357e8c69b4120bac7
  version4 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_pong.version5
                   (GHC.Types.[] @ GHC.Types.Int)) -}
0a3a9c7319fcd4fb7b0b8bebd5a66314
  version5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
331669a4ce081ddfd42e0c9786682b93
  version6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

